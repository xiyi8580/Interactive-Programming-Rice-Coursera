# implementation of card game - Memory

import simplegui
import random

list1 = range(8)
list2 = range(8)
merged_list = list1 + list2
exposed = [False for i in range(0,16)]
# where the mouse clicked
click_pos = [0,0]

#To record the state of cards
state = 0

first_click = 0
second_click = 0

#To record how many turns
counter = 0

# helper function to initialize globals
def new_game():
    global  merged_list, click_pos, first_click, second_click,state, counter,exposed
    click_pos = [0,0]
    state = 0
    first_click = 0
    second_click = 0
    counter = 0    
    
    random.shuffle(merged_list)
    exposed = [False for i in range(0,16)]
    
    
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global click_pos, state, first_click, second_click,counter
    click_pos = list(pos)
    pos_on_canvas = int (click_pos[0]/50)
    if(not exposed[pos_on_canvas]):
        if state == 0:
            first_click = pos_on_canvas
            if(not exposed[first_click]):
                exposed[first_click] = True

            state = 1
        elif state == 1: 
            second_click = pos_on_canvas
            
            if(not exposed[second_click]):
                exposed[second_click] = True
            
            state = 2
                
        else:
            
            if merged_list[first_click] != merged_list[second_click]:
                exposed[first_click] = False
                exposed[second_click] = False
            first_click = pos_on_canvas
            if(not exposed[first_click]): 
                exposed[first_click] = True
            counter += 1
            state = 1
                
                      
# cards are logically 50x100 pixels in size    
def draw(canvas):
    global merged_list,exposed
    for i in range(0,len(merged_list)):
        canvas.draw_text(str(merged_list[i]), (i*50+10,70), 60, 'White')
    for i in range(0,16):
        if not exposed[i]:
            canvas.draw_polygon([(50*(i),0),(50*(i+1),0),(50*(i+1), 100),(50*i,100)], 2 , 'Orange', 'Green')
    label.set_text("Turns = " + str(counter))
            

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
